import os
from dotenv import load_dotenv
from langchain_community.vectorstores import Chroma
from langchain_openai import OpenAIEmbeddings  # Mudan√ßa aqui
from langchain_core.documents import Document

load_dotenv()

convencoes_exemplo = [
    {
        "texto": "Conven√ß√£o Coletiva 2023-2025 - Sindicato dos Metal√∫rgicos de MG\n\nCl√°usula 5¬™ - Sal√°rio M√≠nimo Profissional:\n- Operador de M√°quinas: R$ 2.589,00\n- Auxiliar de Produ√ß√£o: R$ 1.985,00\n\nCl√°usula 12¬™ - Benef√≠cios:\n- Vale-alimenta√ß√£o: R$ 800,00 mensais\n- Assist√™ncia m√©dica: Cobrir 70% do plano",
        "metadata": {
            "sindicato": "Metal√∫rgicos",
            "estado": "MG",
            "ano_vigencia": 2023,
            "industria": "metalurgica"
        }
    },
    {
        "texto": "Acordo Coletivo 2024 - Sindicato dos Comerci√°rios de SP\n\nArtigo 3¬∫ - Remunera√ß√£o:\n- Piso salarial: R$ 1.850,00\n- Hora extra: 50% adicional\n\nArtigo 7¬∫ - Condi√ß√µes:\n- Jornada semanal: 44 horas\n- Descanso semanal remunerado",
        "metadata": {
            "sindicato": "Comerci√°rios",
            "estado": "SP",
            "ano_vigencia": 2024,
            "industria": "comercio"
        }
    }
]

def criar_banco():
    if os.path.exists("data"):
        import shutil
        shutil.rmtree("data")
        print("‚ôªÔ∏è Banco de dados antigo removido")

    documents = [
        Document(
            page_content=item["texto"],
            metadata=item["metadata"]
        ) for item in convencoes_exemplo
    ]

    db = Chroma.from_documents(
        documents=documents,
        embedding=OpenAIEmbeddings(model="text-embedding-ada-002"),  # Mudan√ßa crucial aqui
        persist_directory="data",
        collection_name="convencoes"
    )

    print(f"\n‚úÖ Banco recriado com {len(documents)} conven√ß√µes coletivas")
    print(f"üìç Local: data")
    print(f"üîß Embedding model: text-embedding-ada-002")

if __name__ == "__main__":
    criar_banco()